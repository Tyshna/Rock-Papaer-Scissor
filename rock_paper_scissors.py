# -*- coding: utf-8 -*-
"""Rock-Paper-Scissors
Automatically generated by Colab.
Original file is located at
    https://colab.research.google.com/drive/18Z71XEDu9yP7BgZXjSreeHf7oD1JoEc4
#The Rock-Paper-Scissors Game
### Overview
In this project, I have created a ROCK-PAPER-SCISSORS game in which a player plays either 'Rock', 'Paper' or 'Scissors' and a computer tries to beat the player based on the player's previous moves. This game is generally played between two people. The rules of this game are:
1. Rock beats scissors.
2. Scissors beat paper.
3. Paper beats rock.
<img src="https://s3-whjr-v2-prod-bucket.whjr.online/b5ceb1fc-1760-4cd4-ae6c-ea600e577899.svg"/>
*Image Credits: https://commons.wikimedia.org/wiki/*
For every move, either a human player gets 1 point or the computer gets 1 point. The game runs till either a human player or the computer reaches a score of 10 points.
**Player Input Format**
A player should play his/her move by entering the numbers 0, 1 and 2 where-
- 0 denotes ROCK.
- 1 denotes PAPER.
- 2 denotes SCISSORS.
"""

# Imports
import random
# Creating variables and setting their initial values equal to 0.
count_rock = count_paper = count_scissors = 0


#\update_counts()
def update_counts(user_input):
  global count_rock , count_paper , count_scissors
  user_input = int(input("Enter 0 , 1 or 2: "))
  if user_input == 0:
    count_rock += 1
  elif user_input == 1:
    count_paper += 1
  else:
    count_scissors += 1
update_counts(user_input)


#predict()
def predict():
  if count_rock > count_paper and count_rock > count_scissors:
    pred = 0
  elif count_paper > count_rock and count_paper > count_scissors:
    pred = 1
  elif count_scissors > count_rock and count_scissors > count_paper:
    pred = 2
  else:
    pred = random.randint(0, 2)

  return pred
predict()

player_score = comp_score = 0

#update_scores()
def update_scores(user_input):
  global player_score, comp_score
  # Rock wins over scissors, scissors win over paper and paper wins over rock.
  pred = predict()

# if-else to check scores
  if user_input == 0:
    if pred == 0:
      print("\nYou played ROCK, computer played ROCK.")
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)
    elif pred == 1:
      print("\nYou played ROCK, computer played PAPER.")
      comp_score += 1
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)
    else:
      print("\nYou played ROCK, computer played SCISSORS.")
      player_score += 1
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)

  elif user_input == 1:
    if pred == 1:
      print("\nYou played PAPER, computer played PAPER.")
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)
    elif pred == 0:
      print("\nYou played PAPER, computer played ROCK.")
      player_score += 1
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)
    else:
      print("\nYou played PAPER, computer played SCISSORS.")
      comp_score += 1
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)

  else:
    if pred == 2:
      print("\nPlayer played SCISSORS, computer played SCISSORS")
      print("\nComputer Score: ",comp_score, "\nYour Score: ", player_score)
    elif pred == 0:
      print("\nPlayer played SCISSORS, computer played ROCK")
      comp_score += 1
      print("\nComputer Score: ",comp_score,"\nYour Score: ", player_score)
    else:
      print("\nPlayer played SCISSORS, computer played PAPER")
      player_score += 1
      print("\nComputer Score: ", comp_score, "\nYour Score: ", player_score)

#list for valid_entries
valid_entries = ['0', '1', '2']

while True: #indefinte while loop for gameplay
  user_input = input("Enter 0 for ROCK, 1 for PAPER and 2 for SCISSORS: ") #taking user input from player
  #while loop to validate user input
  while user_input not in valid_entries:
    print("\nInvalid Input!") #for invalid input
    user_input = input("Enter 0 for ROCK, 1 for PAPER and 2 for SCISSORS: ")#asking for a new input

  user_input = int(user_input) #converting user input to int
  update_scores(user_input) #calling update scores to check score
  update_counts(user_input)

#who won
  if comp_score == 10:
    print("Computer Won")
    break
  elif player_score == 10:
    print("You Won")
    break
